From 2e75d7858baf8b00388f51928f2eab9395b67e49 Mon Sep 17 00:00:00 2001
From: Cody P Schafer <dev@codyps.com>
Date: Wed, 26 Nov 2014 10:00:32 -0500
Subject: [PATCH] libstd/io/process/Command: fully quote and escape the command
 and all args

---
 src/libstd/io/process.rs | 26 ++++++++++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/src/libstd/io/process.rs b/src/libstd/io/process.rs
index d4d24c1..0904928 100644
--- a/src/libstd/io/process.rs
+++ b/src/libstd/io/process.rs
@@ -383,14 +383,36 @@ impl Command {
     }
 }
 
+struct SingleQuotedStr<'a> {
+    s: &'a str
+}
+
+impl<'b> SingleQuotedStr<'b> {
+    fn new<'a>(i: &'a str) -> SingleQuotedStr<'a> {
+        SingleQuotedStr { s: i }
+    }
+}
+
+impl<'a> fmt::Show for SingleQuotedStr<'a> {
+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
+        let mut elems = self.s.split('\'');
+        let fst = elems.next().unwrap_or("");
+        try!(write!(f, "'{}", fst));
+        for elem in elems {
+            try!(write!(f, "'\\''{}", elem));
+        }
+        write!(f, "'")
+    }
+}
+
 impl fmt::Show for Command {
     /// Format the program and arguments of a Command for display. Any
     /// non-utf8 data is lossily converted using the utf8 replacement
     /// character.
     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
-        try!(write!(f, "{}", String::from_utf8_lossy(self.program.as_bytes_no_nul())));
+        try!(write!(f, "{}", SingleQuotedStr::new(String::from_utf8_lossy(self.program.as_bytes_no_nul()).as_slice())));
         for arg in self.args.iter() {
-            try!(write!(f, " '{}'", String::from_utf8_lossy(arg.as_bytes_no_nul())));
+            try!(write!(f, " {}", SingleQuotedStr::new(String::from_utf8_lossy(arg.as_bytes_no_nul()).as_slice())));
         }
         Ok(())
     }
-- 
2.1.3

